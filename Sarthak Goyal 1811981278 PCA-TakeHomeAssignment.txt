1.           import pandas as pd
df=pd.read_csv("Wne.csv")
df
import seaborn as sns
import matplotlib.pyplot as plt
g = sns.FacetGrid(df, hue='Customer_Segment', palette='coolwarm', size=6, aspect=2)
g = g.map(plt.hist,'Alcohol',bins=20,alpha=0.7)
plt.show()
sns.heatmap(df.corr(), annot = True, cmap = 'magma')

*****************************************************
2.           import re
import pandas as pd
from matplotlib import pyplot
import numpy as np 
import matplotlib.pyplot as plt 
import seaborn as sns


sns.set()
%matplotlib inline



#delete columns with many missing data


#Drop rows with missing data 
df_train.dropna(inplace=True)

from sklearn.model_selection import train_test_split
df_train = pd.get_dummies(df_train) #Getting dummies for categorical values

#Splitting test and train
X_train, X_test, y_train, y_test = train_test_split(df_train.loc[:, df_train.columns != 'Customer_Segment'], df_train['Customer_Segment'], test_size=0.25, random_state=42)
from sklearn.decomposition import PCA

def pca_dec(data, n):
  pca = PCA(n)
  X_dec = pca.fit_transform(data)
  return X_dec, pca


pca_train_results, pca_train = pca_dec(X_train, 10)


pca_test_results, pca_test = pca_dec(X_test, 10)


names_pcas = [f"PCA Component {i}" for i in range(1, 11, 1)]
scree = pd.DataFrame(list(zip(names_pcas, pca_train.explained_variance_ratio_)), columns=["Component", "Explained Variance Ratio"])
print(scree)

df = pd.DataFrame({'PCA':pca_train.components_[0], 'Variable Names':list(X_train.columns)})
df = df.sort_values('PCA', ascending=False)


df2 = pd.DataFrame(df)
df2['PCA']=df2['PCA'].apply(np.absolute)
df2 = df2.sort_values('PCA', ascending=False)


df.head()

*****************************************************
3.           
def pca_dec(data, n):
  pca = PCA(n)
  X_dec = pca.fit_transform(data)
  return X_dec, pca


pca_train_results, pca_train = pca_dec(X_train, 10)


pca_test_results, pca_test = pca_dec(X_test, 10)


names_pcas = [f"PCA Component {i}" for i in range(1, 11, 1)]
scree = pd.DataFrame(list(zip(names_pcas, pca_train.explained_variance_ratio_)), columns=["Component", "Explained Variance Ratio"])
print(scree)

*****************************************************
4.           from sklearn.feature_selection import RFE
from sklearn.linear_model import LogisticRegression
model = LogisticRegression(solver='lbfgs')
df=pd.read_csv("C:\\Users\hp\Downloads\\Wne.csv")
X=df.iloc[:,0:12]
Y=df.iloc[:,13]
rfe = RFE(model, 3)
fit = rfe.fit(X, Y)
print("Num Features: %d" % fit.n_features_)
print("Selected Features: %s" % fit.support_)
print("Feature Ranking: %s" % fit.ranking_)

*****************************************************
